// Generated by Dagger (https://dagger.dev).
package br.com.adenilson.gist.domain.interactor;

import br.com.adenilson.data.repository.GistRepository;
import br.com.adenilson.gist.domain.mapper.GistListMapper;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class GetGistListInteractorImpl_Factory implements Factory<GetGistListInteractorImpl> {
  private final Provider<GistRepository> repositoryProvider;

  private final Provider<GistListMapper> mapperProvider;

  public GetGistListInteractorImpl_Factory(Provider<GistRepository> repositoryProvider,
      Provider<GistListMapper> mapperProvider) {
    this.repositoryProvider = repositoryProvider;
    this.mapperProvider = mapperProvider;
  }

  @Override
  public GetGistListInteractorImpl get() {
    return newInstance(repositoryProvider.get(), mapperProvider.get());
  }

  public static GetGistListInteractorImpl_Factory create(
      Provider<GistRepository> repositoryProvider, Provider<GistListMapper> mapperProvider) {
    return new GetGistListInteractorImpl_Factory(repositoryProvider, mapperProvider);
  }

  public static GetGistListInteractorImpl newInstance(GistRepository repository,
      GistListMapper mapper) {
    return new GetGistListInteractorImpl(repository, mapper);
  }
}
